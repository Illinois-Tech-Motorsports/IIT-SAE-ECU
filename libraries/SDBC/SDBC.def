/**
 * AUTO GENERATED FILE - DO NOT EDIT
 *
 * SDBC Values, defined in C as their respective ID
 */

#include <stdint.h>

#define CAN_MESSAGE_COUNT 3 // Total number of can messages

// Message address, node_name, msg_name, name, bit-size, byte/bit pos, storage type, actual type
#define CAN_MSGBLK_FRONT_WHEEL_SPEED                                                              \
    X(0, FRONT_ECU, CAN_MSGBLK_FRONT_WHEEL_SPEED, WHEEL_SPEED_FRONT_LEFT, 32, 4, uint32_t, float) \
    X(0, FRONT_ECU, CAN_MSGBLK_FRONT_WHEEL_SPEED, WHEEL_SPEED_FRONT_RIGHT, 32, 0, uint32_t, float)
#define CAN_MSGBLK_BACK_WHEEL_SPEED                                                            \
    X(1, BACK_ECU, CAN_MSGBLK_BACK_WHEEL_SPEED, WHEEL_SPEED_BACK_LEFT, 32, 4, uint32_t, float) \
    X(1, BACK_ECU, CAN_MSGBLK_BACK_WHEEL_SPEED, WHEEL_SPEED_BACK_RIGHT, 32, 0, uint32_t, float)

#ifdef BACK_ECU

/* CAN */

// count, address, signal count, outgoing
#define CAN_MSGBLK_FRONT_WHEEL_SPEED_META X(0, 0, 2, false)
#define CAN_MSGBLK_BACK_WHEEL_SPEED_META X(1, 1, 2, true)

// Incoming can signals
#define IN_CAN_SIGNALS \
    CAN_MSGBLK_FRONT_WHEEL_SPEED

// Outgoing can signals
#define OUT_CAN_SIGNALS \
    CAN_MSGBLK_BACK_WHEEL_SPEED

/* PINS */

// type, name, pin, digital/analog, input/output
#define PIN_ONBOARD_LED X(GPIO, ONBOARD_LED, 13, DIGITAL, OUTPUT)
#define PIN_CHARGE_SIGNAL X(VIRT, CHARGE_SIGNAL, 140, DIGITAL, OUTPUT)

#define PINS        \
    PIN_ONBOARD_LED \
    PIN_CHARGE_SIGNAL

#endif

#define CAN_MESSAGES                  \
    CAN_MSGBLK_FRONT_WHEEL_SPEED_META \
    CAN_MSGBLK_BACK_WHEEL_SPEED_META

#define FRONT_ECU_CAN_MESSAGES \
    CAN_MSGBLK_FRONT_WHEEL_SPEED

#define BACK_ECU_CAN_MESSAGES \
    CAN_MSGBLK_BACK_WHEEL_SPEED

// name
#define NODES     \
    _X(FRONT_ECU) \
    _X(BACK_ECU)  \
    _X(MC0)       \
    _X(MC1)       \
    _X(AMS)