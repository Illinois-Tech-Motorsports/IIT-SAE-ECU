/**
 * SDBC Data Types, defined in C
 *
 * Defined per device
 *
 * Initial file is autogenerated if non existant
 * Data types should be filled out by user
 */

#pragma once
#include <stdint.h>

#define SDBC_TYPE_DEFINITIONS \
    X(long_t, int64_t)        \
    X(int_t, int32_t)         \
    X(short_t, int16_t)       \
    X(byte_t, int8_t)         \
    X(ulong_t, uint64_t)      \
    X(uint_t, uint32_t)       \
    X(ushort_t, uint16_t)     \
    X(ubyte_t, uint8_t)       \
    X(float_t, float)         \
    X(double_t, double)       \
    X(bool_t, bool)           \
    X(binary_t, uint32_t)

namespace SDBC {

using gpio_val_t = int16_t; // TODO: vary based on the bit resolution config
using virt_val_t = double;  // TODO: drop to float if <= 32 bits are used for all VIRTs, includes value setters

const int ANALOG_RESOLUTION = 12;
const int ANALOG_MAX = 1 << ANALOG_RESOLUTION;
const int VIRT_ID_OFFSET = 128;

enum dt {
#define X(dt_id, typ) dt_id,
    SDBC_TYPE_DEFINITIONS
#undef X
};

} // namespace SDBC