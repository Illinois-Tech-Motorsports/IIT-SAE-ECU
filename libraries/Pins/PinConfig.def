/**
 * @file PinConfig.def
 * @author IR
 * @brief Pin Configuration
 * @version 0.1
 * @date 2020-11-11
 *
 * @copyright Copyright (c) 2022
 *
 * This config file is used configure the Pin module.
 *
 * It is mostly used to define pins and CanPins.
 *
 * Because, at the moment, there are two ECUs on the car, the pin definitions are split in half by an if statement, one case is for the back ECU, the other for the front.
 *
 * Only the back ECU has documentation, as the process for defining pins is the same on both ECUs.
 *
 * @see Pins.h for more info on how pins work
 * @see ECU_PINS for defining pins
 * @see PINS_CANBUS_ANALOG_IN for incoming Analog CanPins
 * @see PINS_CANBUS_ANALOG_OUT for outgoing Analog CanPins
 * @see PINS_CANBUS_DIGITAL_IN for incoming Digital CanPins
 * @see PINS_CANBUS_DIGITAL_OUT for outgoing Digital CanPins
 *
 */

#ifndef __ECU_PINCONFIG_DEF__

// @cond

#define __ECU_PINCONFIG_DEF__

#include "Canbus.h"
#include "ECUGlobalConfig.h"
#include "PPHelp.h"
#include "WProgram.h"

#define ANALOG
#define DIGITAL
#define NIL 0xDEADBEEF // NOTE: Random number that should not match any inital values

// @endcond

/**
 * @brief The interval in micros to update outgoing canPins
 */
#define CONF_PINS_CANBUS_UPDATE_INTERVAL_MICRO 60000

/**
 * @brief The write resolution for analog pins
 */
#define CONF_PINS_ANALOG_WRITE_RESOLUTION 12

// @cond

// Internal Pins
// Virtual pins that can be used as a canPin, must all be unique to eachother with values 100 - 254
// Whether the pin is analog or digital depends on which message type it is sent/received on, meaning it is either a digital or analog value.
#define PINS_INTERNAL_CHARGE_SIGNAL 100
#define PINS_INTERNAL_START 101
#define PINS_INTERNAL_BMS_FAULT 102
#define PINS_INTERNAL_IMD_FAULT 103
#define PINS_INTERNAL_GEN_FAULT 104
#define PINS_INTERNAL_STATE 105
#define PINS_INTERNAL_SYNC 106
#define PINS_INTERNAL_REVERSE 107
#define PINS_INTERNAL_TVAGG 108

// Both ECUs
#define PINS_BOTH_LED 13

// Back ECU Only - ECU0
#define PINS_BACK_FAN2_PWM 0         // PWM fan control
#define PINS_BACK_FAN1_PWM 1         // PWM fan control
#define PINS_BACK_ICS_SD 8           // Mic SD
#define PINS_BACK_BMS_FAULT 28       // Fault pin
#define PINS_BACK_AIR2 29            // Air 2 control
#define PINS_BACK_088_INT2_ACCEL 34  // accelerometer
#define PINS_BACK_FAULT_RESET 30     // Reset ECU Fault
#define PINS_BACK_PRECHARGE_RELAY 31 // Precharge relay control
#define PINS_BACK_BRAKE_LIGHT 3      // Brake light On or Off
#define PINS_BACK_088_INT3_GYRO 33   // Gyro
#define PINS_BACK_IO_14 14           // General IO
#define PINS_BACK_IO_15 15           // General IO
#define PINS_BACK_PUMP_SCL 16        // Pump SCL
#define PINS_BACK_PUMP_SDA 17        // Pump SDA
#define PINS_BACK_IO_18 18           // General IO
#define PINS_BACK_IO_19 19           // General IO
#define PINS_BACK_ICS_WS 20          // Mic WS
#define PINS_BACK_ICS_SCK 21         // Mic SCK
#define PINS_BACK_SOUND_DRIVER 2     // Buzzer
#define PINS_BACK_CHARGING_RELAY 32  // On or Off
#define PINS_BACK_TSV_SIGNAL 12      // digital input
#define PINS_BACK_ECU_FAULT 11       // set a fault
#define PINS_BACK_IMD_FAULT 27       // Fault pin
#define PINS_BACK_SHUTDOWN_SIGNAL 26 // digital input
#define PINS_BACK_088_SDA 25         // 088 SDA
#define PINS_BACK_088_SCL 24         // 088 SCL

// Front ECU Only - ECU1
#define PINS_FRONT_BUTTON_INPUT_OFF 41 // Digital Start Button
#define PINS_FRONT_WHEEL1 20           // 0-5v R wheel speed
#define PINS_FRONT_WHEEL0 19           // 0-5v L wheel speed
#define PINS_FRONT_PEDAL1 17           // Pedal 2
#define PINS_FRONT_PEDAL0 18           // Pedal 1
#define PINS_FRONT_STEER 21            // -5-5v steering wheel
#define PINS_FRONT_BRAKE 16            // 0-3.3v brake
#define PINS_FRONT_IMD_LIGHT 7         // imd led
#define PINS_FRONT_BMS_LIGHT 8         // bms led
#define PINS_FRONT_START_LIGHT 2       // start led
// @endcond

#if CONF_ECU_POSITION == BACK_ECU

/**
 * @brief The defintions of every physical pin
 *
 * The pinout setup for the ECU, set the specific pin,
 * whether it is analog or digital, and whether we are
 * taking input or giving an output on the pin
 *
 * Unless it is the last entry, this is how to add a new pin
 *
 * ``` C
 * X(GPIO, ANALOG/DIGITAL, INPUT/OUTPUT, INITAL_STATE) \
 * ```
 *
 * `INITAL_STATE` is the value a pin should be set to on startup
 *
 * It can be a number or `NIL`, meaning that we do not care what it's starting output value is
 *
 * All `INPUT` pins should have this set to `NIL`
 *
 * Only the last entry should NOT have a '\'
 *
 * @see The warning under @ref XMacros_Defining in X Macros for more info on Defining X Macros
 */
#define ECU_PINS                                      \
    X(PINS_BOTH_LED, DIGITAL, OUTPUT, NIL)            \
    X(PINS_BACK_TSV_SIGNAL, DIGITAL, INPUT, NIL)      \
    X(PINS_BACK_AIR2, DIGITAL, OUTPUT, 0)             \
    X(PINS_BACK_CHARGING_RELAY, DIGITAL, OUTPUT, 1)   \
    X(PINS_BACK_SOUND_DRIVER, ANALOG, OUTPUT, 0)      \
    X(PINS_BACK_BRAKE_LIGHT, ANALOG, OUTPUT, 0)       \
    X(PINS_BACK_PRECHARGE_RELAY, DIGITAL, OUTPUT, 0)  \
    X(PINS_BACK_SHUTDOWN_SIGNAL, DIGITAL, INPUT, NIL) \
    X(PINS_BACK_FAN1_PWM, ANALOG, OUTPUT, 0)          \
    X(PINS_BACK_FAN2_PWM, ANALOG, OUTPUT, 0)          \
    X(PINS_BACK_IMD_FAULT, DIGITAL, INPUT, NIL)       \
    X(PINS_BACK_BMS_FAULT, DIGITAL, INPUT, NIL)       \
    X(PINS_BACK_088_INT2_ACCEL, DIGITAL, INPUT, NIL)  \
    X(PINS_BACK_FAULT_RESET, DIGITAL, INPUT, NIL)     \
    X(PINS_BACK_088_INT3_GYRO, DIGITAL, INPUT, NIL)   \
    X(PINS_BACK_IO_14, DIGITAL, OUTPUT, 0)            \
    X(PINS_BACK_IO_15, DIGITAL, OUTPUT, 0)            \
    X(PINS_BACK_IO_18, DIGITAL, OUTPUT, 0)            \
    X(PINS_BACK_IO_19, DIGITAL, OUTPUT, 0)            \
    X(PINS_BACK_ECU_FAULT, DIGITAL, OUTPUT, 0)
// PINS_BACK_088_SDA
// PINS_BACK_088_SCL
// X(PINS_BACK_ICS_SD, DIGITAL, INPUT, NIL)
// X(PINS_BACK_ICS_WS, DIGITAL, INPUT, NIL)
// X(PINS_BACK_ICS_SCK, DIGITAL, INPUT, NIL)
// X(PINS_BACK_PUMP_SCL, DIGITAL, INPUT, NIL)
// X(PINS_BACK_PUMP_SDA, DIGITAL, INPUT, NIL)

// X(PINS_BACK_AIR1, ANALOG, OUTPUT, 0)
// X(PINS_BACK_FANS_ONOFF, DIGITAL, OUTPUT, 0)
// X(PINS_BACK_HVD_FAULT, DIGITAL, INPUT, NIL)

/**
 * @brief The defintions of every analog pin to be received over canbus
 *
 * @note Only two analog pins can be allocated per address
 * @note The number of pins per address must be maximized, this means that there should be, at a maximum, only one address that only has one value to send
 *
 * Unless it is the last entry, this is how to add a new pin
 *
 * ``` C
 * X(Address, Pin) \
 * ```
 *
 * Only the last entry should NOT have a '\'
 *
 * @see The warning under @ref XMacros_Defining in X Macros for more info on Defining X Macros
 * @see CanBusAddresses.def for more info on defining new addresses
 */
#define PINS_CANBUS_ANALOG_IN                \
    X(ADD_CANPIN_ANALOG0, PINS_FRONT_PEDAL0) \
    X(ADD_CANPIN_ANALOG0, PINS_FRONT_PEDAL1) \
    X(ADD_CANPIN_ANALOG1, PINS_FRONT_WHEEL1) \
    X(ADD_CANPIN_ANALOG1, PINS_FRONT_WHEEL0) \
    X(ADD_CANPIN_ANALOG2, PINS_FRONT_STEER)  \
    X(ADD_CANPIN_ANALOG2, PINS_FRONT_BRAKE)  \
    X(ADD_CANPIN_ANALOG4, PINS_INTERNAL_TVAGG)

/**
 * @brief Same as PINS_CANBUS_ANALOG_IN only for the analog pins that are outgoing
 */
#define PINS_CANBUS_ANALOG_OUT \
    X(ADD_CANPIN_ANALOG3, PINS_INTERNAL_STATE)

/**
 * @brief The defintions of every digital pin to be received over canbus
 *
 * @note Only 8 digital pins can be allocated per address
 * @note Currently, only one address is supported, support for up to 64 pins can be added later if needed
 *
 * Unless it is the last entry, this is how to add a new pin
 *
 * ``` C
 * X(Address, Pin) \
 * ```
 *
 * Only the last entry should NOT have a '\'
 *
 * @see The warning under @ref XMacros_Defining in X Macros for more info on Defining X Macros
 * @see CanBusAddresses.def for more info on defining new addresses
 */
#define PINS_CANBUS_DIGITAL_IN                          \
    X(ADD_CANPIN_DIGITAL1, PINS_INTERNAL_CHARGE_SIGNAL) \
    X(ADD_CANPIN_DIGITAL1, PINS_INTERNAL_SYNC)          \
    X(ADD_CANPIN_DIGITAL1, PINS_INTERNAL_REVERSE)       \
    X(ADD_CANPIN_DIGITAL1, PINS_FRONT_BUTTON_INPUT_OFF)

/**
 * @brief Same as PINS_CANBUS_DIGITAL_IN only for the digital pins that are outgoing
 */
#define PINS_CANBUS_DIGITAL_OUT                     \
    X(ADD_CANPIN_DIGITAL0, PINS_INTERNAL_START)     \
    X(ADD_CANPIN_DIGITAL0, PINS_INTERNAL_BMS_FAULT) \
    X(ADD_CANPIN_DIGITAL0, PINS_INTERNAL_IMD_FAULT) \
    X(ADD_CANPIN_DIGITAL0, PINS_INTERNAL_GEN_FAULT)

#else
#define ECU_PINS                                        \
    X(PINS_BOTH_LED, DIGITAL, OUTPUT, NIL)              \
    X(PINS_FRONT_BUTTON_INPUT_OFF, DIGITAL, INPUT, NIL) \
    X(PINS_FRONT_WHEEL1, ANALOG, INPUT, NIL)            \
    X(PINS_FRONT_WHEEL0, ANALOG, INPUT, NIL)            \
    X(PINS_FRONT_PEDAL1, ANALOG, INPUT, NIL)            \
    X(PINS_FRONT_PEDAL0, ANALOG, INPUT, NIL)            \
    X(PINS_FRONT_STEER, ANALOG, INPUT, NIL)             \
    X(PINS_FRONT_BRAKE, ANALOG, INPUT, NIL)             \
    X(PINS_FRONT_IMD_LIGHT, DIGITAL, OUTPUT, 0)         \
    X(PINS_FRONT_BMS_LIGHT, DIGITAL, OUTPUT, 0)         \
    X(PINS_FRONT_START_LIGHT, DIGITAL, OUTPUT, 0)

#define PINS_CANBUS_ANALOG_IN \
    X(ADD_CANPIN_ANALOG3, PINS_INTERNAL_STATE)

#define PINS_CANBUS_ANALOG_OUT               \
    X(ADD_CANPIN_ANALOG0, PINS_FRONT_PEDAL0) \
    X(ADD_CANPIN_ANALOG0, PINS_FRONT_PEDAL1) \
    X(ADD_CANPIN_ANALOG1, PINS_FRONT_WHEEL1) \
    X(ADD_CANPIN_ANALOG1, PINS_FRONT_WHEEL0) \
    X(ADD_CANPIN_ANALOG2, PINS_FRONT_STEER)  \
    X(ADD_CANPIN_ANALOG2, PINS_FRONT_BRAKE)  \
    X(ADD_CANPIN_ANALOG4, PINS_INTERNAL_TVAGG)

#define PINS_CANBUS_DIGITAL_IN                      \
    X(ADD_CANPIN_DIGITAL0, PINS_INTERNAL_START)     \
    X(ADD_CANPIN_DIGITAL0, PINS_INTERNAL_BMS_FAULT) \
    X(ADD_CANPIN_DIGITAL0, PINS_INTERNAL_IMD_FAULT) \
    X(ADD_CANPIN_DIGITAL0, PINS_INTERNAL_GEN_FAULT)

#define PINS_CANBUS_DIGITAL_OUT                         \
    X(ADD_CANPIN_DIGITAL1, PINS_INTERNAL_CHARGE_SIGNAL) \
    X(ADD_CANPIN_DIGITAL1, PINS_INTERNAL_SYNC)          \
    X(ADD_CANPIN_DIGITAL1, PINS_INTERNAL_REVERSE)       \
    X(ADD_CANPIN_DIGITAL1, PINS_FRONT_BUTTON_INPUT_OFF)

#endif

#endif // __ECU_PINCONFIG_DEF__
